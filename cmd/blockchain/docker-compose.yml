version: '3.8'

services:
  # Node blockchain dengan konsensus Avalanche paralel
  blockchain-node:
    build:
      context: ../..
      dockerfile: cmd/blockchain/Dockerfile
      args:
        - AVALANCHE_PARALLEL_PATH=${AVALANCHE_PARALLEL_PATH:-../avalanche-parallel}
    ports:
      - "8545:8545"  # API HTTP
    volumes:
      - ${AVALANCHE_PARALLEL_PATH:-../avalanche-parallel}:/avalanche-parallel
    environment:
      - LOG_LEVEL=info
      - PARALLELISM=4
      - API_PORT=8545
    networks:
      - blockchain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Prometheus untuk monitoring
  prometheus:
    image: prom/prometheus:v2.37.0
    ports:
      - "9090:9090"
    volumes:
      - ../../deployments/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - blockchain-network
    restart: unless-stopped

  # Grafana untuk visualisasi
  grafana:
    image: grafana/grafana:9.0.5
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ../../deployments/grafana/provisioning:/etc/grafana/provisioning
      - ../../deployments/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - blockchain-network
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  prometheus-data:
  grafana-data:

networks:
  blockchain-network:
    driver: bridge 