apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexer-service
  namespace: avalanche-storage
  labels:
    app: indexer-service
    tier: storage
spec:
  replicas: 2
  selector:
    matchLabels:
      app: indexer-service
  template:
    metadata:
      labels:
        app: indexer-service
        tier: storage
    spec:
      containers:
      - name: indexer
        image: avalanche/indexer:v1.0.0
        ports:
        - containerPort: 8087
          name: http
        env:
        - name: PORT
          value: "8087"
        - name: DB_HOST
          value: "state-database.avalanche-storage.svc.cluster.local"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: DB_NAME
          value: "avalanche_indexer"
        - name: REDIS_URL
          value: "redis://cache-service.avalanche-storage.svc.cluster.local:6379"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8087
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8087
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8087
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: indexer-config
          mountPath: /etc/indexer
          readOnly: true
      volumes:
      - name: indexer-config
        configMap:
          name: indexer-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: indexer-service
  namespace: avalanche-storage
  labels:
    app: indexer-service
    tier: storage
spec:
  selector:
    app: indexer-service
  ports:
  - name: http
    port: 8087
    targetPort: 8087
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: indexer-hpa
  namespace: avalanche-storage
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: indexer-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: indexer-pdb
  namespace: avalanche-storage
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: indexer-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: indexer-config
  namespace: avalanche-storage
data:
  config.yaml: |
    indexer:
      batch_size: 100
      index_timeout: 30s
      max_concurrent_blocks: 10
      
    database:
      max_connections: 50
      idle_connections: 10
      connection_lifetime: 300s
      
    cache:
      block_ttl: 3600s
      transaction_ttl: 3600s
      address_ttl: 1800s
      
    indexing:
      start_block: 0
      confirmations: 6
      reorg_depth: 100
      
    query_limits:
      max_transactions_per_address: 1000
      max_blocks_per_query: 100
      default_page_size: 50
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: indexer-network-policy
  namespace: avalanche-storage
spec:
  podSelector:
    matchLabels:
      app: indexer-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: avalanche-core
    - namespaceSelector:
        matchLabels:
          name: avalanche-gateway
    - namespaceSelector:
        matchLabels:
          name: avalanche-network
    ports:
    - protocol: TCP
      port: 8087
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: state-database
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: cache-service
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53 