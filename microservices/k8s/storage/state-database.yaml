apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: state-database
  namespace: avalanche-storage
  labels:
    app: state-database
    tier: storage
spec:
  serviceName: state-database
  replicas: 3
  selector:
    matchLabels:
      app: state-database
  template:
    metadata:
      labels:
        app: state-database
        tier: storage
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "avalanche_state"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: state-database
  namespace: avalanche-storage
  labels:
    app: state-database
    tier: storage
spec:
  selector:
    app: state-database
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: state-database-read
  namespace: avalanche-storage
  labels:
    app: state-database
    tier: storage
spec:
  selector:
    app: state-database
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: avalanche-storage
data:
  postgresql.conf: |
    # PostgreSQL configuration for Avalanche microservices
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    shared_buffers = 1GB
    effective_cache_size = 3GB
    maintenance_work_mem = 256MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 8
    max_parallel_workers_per_gather = 4
    max_parallel_workers = 8
    max_parallel_maintenance_workers = 4
    
    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_statement = 'all'
    log_min_duration_statement = 1000
    
    # Replication
    wal_level = replica
    max_wal_senders = 3
    max_replication_slots = 3
    hot_standby = on
    
  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration File
    local   all             all                                     trust
    host    all             all             127.0.0.1/32            md5
    host    all             all             ::1/128                 md5
    host    all             all             0.0.0.0/0               md5
    host    replication     all             0.0.0.0/0               md5
---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: avalanche-storage
type: Opaque
data:
  username: cG9zdGdyZXM= # postgres (base64)
  password: YXZhbGFuY2hlLWRiLXBhc3N3b3Jk # avalanche-db-password (base64)
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: state-database-pdb
  namespace: avalanche-storage
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: state-database
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: state-database-network-policy
  namespace: avalanche-storage
spec:
  podSelector:
    matchLabels:
      app: state-database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: avalanche-core
    - namespaceSelector:
        matchLabels:
          name: avalanche-gateway
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53 