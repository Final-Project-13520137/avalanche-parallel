apiVersion: apps/v1
kind: Deployment
metadata:
  name: consensus-service
  namespace: avalanche-core
  labels:
    app: consensus-service
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: consensus-service
  template:
    metadata:
      labels:
        app: consensus-service
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: avalanche-service-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - consensus-service
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: workload
                operator: In
                values:
                - consensus
      containers:
      - name: consensus
        image: avalanche/consensus-service:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        env:
        - name: CONSENSUS_MODE
          value: "snowman"
        - name: VALIDATOR_THRESHOLD
          value: "0.67"
        - name: REDIS_URL
          value: "redis://message-queue.avalanche-network:6379"
        - name: DB_HOST
          value: "state-database.avalanche-storage"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "avalanche_state"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: password
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 4000m
            memory: 8Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: consensus-data
          mountPath: /var/lib/consensus
      volumes:
      - name: config
        configMap:
          name: consensus-config
      - name: consensus-data
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: consensus-service
  namespace: avalanche-core
  labels:
    app: consensus-service
spec:
  selector:
    app: consensus-service
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: grpc
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consensus-config
  namespace: avalanche-core
data:
  consensus.yaml: |
    consensus:
      algorithm: snowman
      threshold: 0.67
      timeout: 30s
      maxPollSize: 100
      batchSize: 50
      
    logging:
      level: info
      format: json
      
    metrics:
      enabled: true
      port: 8080
      path: /metrics
      
    tracing:
      enabled: true
      jaegerEndpoint: "http://jaeger.avalanche-monitoring:14268/api/traces"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: consensus-hpa
  namespace: avalanche-core
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: consensus-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60 